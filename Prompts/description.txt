The **Job Aggregator Automation** is a Google Apps Script project designed to streamline job searching for IT professionals, particularly those targeting senior roles like CIO, CTO, Head of IT, or cybersecurity positions. It automates the process of scraping job listings from RSS feeds, scoring them based on user-defined keywords (e.g., "remote," "cybersecurity"), deduplicating entries by link or ID, and storing them in a Google Sheet. The script then sends a daily email digest with a styled HTML table of the top-scoring jobs (up to 10, based on a minimum score threshold). The project is optimized for reliability with batch processing to prevent timeouts and a custom Google Sheets menu for easy user interaction, making it ideal for personalized, efficient job hunting.

The project consists of nine files: `utils.gs` (v1.3) for logging, date formatting, and ID generation; `input.gs` (v1.2) for reading configuration and RSS feed sources; `scraper.gs` (v1.3) for fetching job data from feeds; `output.gs` (v1.1) for processing and scoring jobs; `appending.gs` (v1.4) for adding unique jobs to the spreadsheet; `email.gs` (v1.4) for sending digests; `menu.gs` (v1.0) for the custom UI; `main.gs` (v1.3) for orchestrating the workflow; and `emailTemplate.html` (v1.0) for the email’s HTML design. The Google Sheet (e.g., SHEET_ID `1fwfkdyReTRCMywq6VmQT7XN5KVu0DWcBOpY0XOxgoD0`) has four tabs: Config (settings like email recipient and keywords), Sources (RSS feeds with active/inactive flags), Jobs (job listings with 12 columns, including Title, Link, and Score), and Logs (execution details).

The automation runs via a daily trigger at 8 AM or manually through the "Job Aggregator" menu, processing up to nine RSS feeds in batches of three to avoid Google Apps Script’s execution limits. It uses keywords from the Config tab to score jobs, ensuring relevance for roles like IT Director or Cloud Operations, and deduplicates based on the `dedupeBy` setting (typically "link"). After processing, it appends new jobs to the Jobs tab, updates their status, and emails the top matches to the configured recipient (e.g., `wachirakungu@gmail.com`). Comprehensive test functions (`testInput`, `testAppending`, `testMain`) ensure robustness.

The project is designed for easy setup: users create a Google Sheet with the required tabs, copy the script files into Apps Script, set the SHEET_ID in Script Properties, and authorize permissions. The Sources tab supports RSS feeds like We Work Remotely and cybersecurity-specific feeds, with checkboxes to enable/disable them. Logging in the Logs tab tracks execution (e.g., `["INFO-001", "main", "Automation Started", "..."]`), aiding debugging. The project is open-source (MIT License) and hosted on GitHub, with a stunning README featuring badges, tables, and emojis for clarity.

Future enhancements could include advanced keyword scoring, support for additional job sources (e.g., APIs), or integration with other platforms. The project’s modular design and detailed documentation make it accessible for developers to extend or adapt for other use cases, such as non-IT job searches. It’s a powerful tool for automating repetitive job search tasks while delivering curated, high-quality results daily.